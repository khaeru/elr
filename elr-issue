#!/bin/sh
USAGE='Usage: elr-issue [ISSUE]
Compile a PDF version of the ELR issue [ISSUE]

The file ISSUE.tex and any other files referenced from it must be in the
current directory. The result is a PDF file named ISSUE.pdf.
'

# check arguments
if [ $# -ne 1 ]
then
  echo "$USAGE"
  exit 0
else
  SOURCE_FILE="$1.tex"
  TARGET_FILE="$1.pdf"
fi

# Check for existence of source and target files
if [ ! -f "$SOURCE_FILE" ]
then
  echo "Source file '${SOURCE_FILE}' not found."
  exit 0
elif [ -f "$TARGET_FILE" ]
then
  echo "Target file '${TARGET_FILE}' will be overwritten."
fi

# temporary directory for compilation
TMP_DIR="tmp.$1"
# paths for the current directory and the ELR LaTeX sources
ELR_TEXPATH="`pwd`:`which $0 | xargs readlink | xargs dirname`"

# create the temporary directory
mkdir $TMP_DIR

# generate bibliography directives for rubber
# count number of source files that use the \elrbib command
N_BIBS=0
DEPS=$(rubber-info --deps --texpath "$ELR_TEXPATH" "$SOURCE_FILE")
for f in $DEPS
do
  if [ -f "$f" ] && [ `grep -s elrbib $f` ]
  then
    N_BIBS=$((N_BIBS+1))
  fi
done
# watch a file like bu1.aux for each of the above...
for bu in `seq $N_BIBS`
do
  cat >> $TMP_DIR.directives <<EOF
watch ${TMP_DIR}/bu${bu}.bbl
onchange ${TMP_DIR}/bu${bu}.aux "BIBINPUTS=.. bibtex bu${bu}"
EOF
done

# compile
rubber -dfs -n -1 -W all --texpath "$ELR_TEXPATH" --into "$TMP_DIR" "$SOURCE_FILE"

# copy results
if [ -f "$TMP_DIR/$TARGET_FILE" ]
then
  mv "$TMP_DIR/$TARGET_FILE" ./
fi

# empty and remove temporary directory
rm -r $TMP_DIR
rm -r $TMP_DIR.directives

